<?xml version="1.0"?>
<release version="1" id="5.3.0">
  <release>5.3.0</release>
  <date>30 June 2009</date>
  <source>
    <source>
      <name>PHP 5.3.0 (tar.bz2)</name>
      <filename>php-5.3.0.tar.bz2</filename>
      <date>30 June 2009</date>
      <sha256/>
    </source>
    <source>
      <name>PHP 5.3.0 (tar.gz)</name>
      <filename>php-5.3.0.tar.gz</filename>
      <date>30 June 2009</date>
      <sha256/>
    </source>
  </source>
  <announcements>
    <announcement lang="en">The PHP development team is proud to announce the immediate release of PHP 5.3.0. This release is a major improvement in the 5.X series, which includes a large number of new features and bug fixes.

**The key features of PHP 5.3.0 include:**

- Support for [namespaces](http://php.net/namespaces)
- [Late static binding](http://php.net/lsb)
- [Lambda Functions and Closures](http://php.net/closures)
- Syntax additions: [NOWDOC](http://php.net/nowdoc), [ternary short cut "?:"](http://php.net/ternary) and [jump label](http://php.net/goto) (limited goto), [__callStatic()](http://php.net/__callstatic)
- Under the hood performance improvements
- Optional [garbage collection](http://php.net/gc_enable) for cyclic references
- Optional [mysqlnd](http://php.net/mysqli.mysqlnd) PHP native replacement for libmysql
- Improved [Windows](http://windows.php.net) support including VC9 and experimental X64 binaries as well as portability to other supported platforms
- More consistent float rounding
- Deprecation notices are now handled via `E_DEPRECATED` (part of `E_ALL`) instead of the `E_STRICT` error level
- Several enhancements to enable more [flexiblity in php.ini](http://php.net/ini.sections) (and ini parsing in general)
- New bundled extensions: [ext/phar](http://php.net/phar), [ext/intl](http://php.net/intl), [ext/fileinfo](http://php.net/fileinfo), [ext/sqlite3](http://php.net/sqlite3), [ext/enchant](http://php.net/enchant)
- Over 140 bug fixes and improvements to PHP, in particular to: [ext/openssl](http://php.net/openssl), [ext/spl](http://php.net/spl) and [ext/date](http://php.net/datetime)

This release also drops several extensions and unifies the usage of internal APIs. Users should be aware of the following known backwards compatibility breaks:

- Parameter parsing API unification will cause some functions to behave more or less strict when it comes to type juggling
- Removed the following extensions: [ext/mhash](http://php.net/mhash) (see [ext/hash](http://php.net/hash)), [ext/msql](http://php.net/msql), [ext/pspell](http://php.net/pspell) (see [ext/enchant](http://php.net/enchant)), [ext/sybase](http://php.net/sybase) (see [ext/sybase_ct](http://php.net/sybase))
- Moved the following extensions to PECL: [ext/ming](http://php.net/ming), [ext/fbsql](http://php.net/fbsql), [ext/ncurses](http://php.net/ncurses), [ext/fdf](http://php.net/fdf)
- Removed [zend.ze1_compatibility_mode](http://php.net/manual/ini.core.php#ini.zend.ze1-compatibility-mode)

For users upgrading from PHP 5.2 there is a migration guide available [here](http://php.net/migration53), detailing the changes between those releases and PHP 5.3.0.

 For a full list of changes in PHP 5.3.0, see the [ChangeLog](/ChangeLog-5.php#5.3.0).</announcement>
  </announcements>
  <tags/>
  <changes>
    <module id="Moved extensions to PECL (Derick, Lukas, Pierre, Scott)">
      <change>
        <description>ext/dbase</description>
        <references/>
      </change>
      <change>
        <description>ext/fbsql</description>
        <references/>
      </change>
      <change>
        <description>ext/fdf</description>
        <references/>
      </change>
      <change>
        <description>ext/ncurses</description>
        <references/>
      </change>
      <change>
        <description>ext/mhash (BC layer is now entirely within ext/hash)</description>
        <references/>
      </change>
      <change>
        <description>ext/ming</description>
        <references/>
      </change>
      <change>
        <description>ext/msql</description>
        <references/>
      </change>
      <change>
        <description>ext/sybase (not maintained anymore, sybase_ct has to be used instead)</description>
        <references/>
      </change>
    </module>
    <module id="Improved PHP syntax and semantics">
      <change>
        <description>Added lambda functions and closures. (Christian Seiler, Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Added "jump label" operator (limited "goto"). (Dmitry, Sara)</description>
        <references/>
      </change>
      <change>
        <description>Added NOWDOC syntax. (Gwynne Raskind, Stas, Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Added HEREDOC syntax with double quotes. (Lars Strojny, Felipe)</description>
        <references/>
      </change>
      <change>
        <description>Added support for using static HEREDOCs to initialize static variables and class members or constants. (Matt)</description>
        <references/>
      </change>
      <change>
        <description>Improved syntax highlighting and consistency for variables in double-quoted strings and literal text in HEREDOCs and backticks. (Matt)</description>
        <references/>
      </change>
      <change>
        <description>Added "?:" operator. (Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added support for namespaces. (Dmitry, Stas, Gregory, Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added support for Late Static Binding. (Dmitry, Etienne Kneuss)</description>
        <references/>
      </change>
      <change>
        <description>Added support for __callStatic() magic method. (Sara)</description>
        <references/>
      </change>
      <change>
        <description>Added forward_static_call(_array) to complete LSB. (Mike Lively)</description>
        <references/>
      </change>
      <change>
        <description>Added support for dynamic access of static members using $foo::myFunc(). (Etienne Kneuss)</description>
        <references/>
      </change>
      <change>
        <description>Improved checks for callbacks. (Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added __DIR__ constant. (Lars Strojny)</description>
        <references/>
      </change>
      <change>
        <description>Added new error modes E_USER_DEPRECATED and E_DEPRECATED. E_DEPRECATED is used to inform about stuff being scheduled for removal in future PHP versions. (Lars Strojny, Felipe, Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added "request_order" INI variable to control specifically $_REQUEST behavior. (Stas)</description>
        <references/>
      </change>
      <change>
        <description>Added support for exception linking. (Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added ability to handle exceptions in destructors. (Marcus)</description>
        <references/>
      </change>
    </module>
    <module id="Improved PHP runtime speed and memory usage">
      <change>
        <description>Substitute global-scope, persistent constants with their values at compile time. (Matt)</description>
        <references/>
      </change>
      <change>
        <description>Optimized ZEND_SIGNED_MULTIPLY_LONG(). (Matt)</description>
        <references/>
      </change>
      <change>
        <description>Removed direct executor recursion. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Use fastcall calling convention in executor on x86. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Use IS_CV for direct access to $this variable. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Use ZEND_FREE() opcode instead of ZEND_SWITCH_FREE(IS_TMP_VAR). (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Lazy EG(active_symbol_table) initialization. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Optimized ZEND_RETURN opcode to not allocate and copy return value if it is not used. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Replaced all flex based scanners with re2c based scanners. (Marcus, Nuno, Scott)</description>
        <references/>
      </change>
      <change>
        <description>Added garbage collector. (David Wang, Dmitry).</description>
        <references/>
      </change>
      <change>
        <description>Improved PHP binary size and startup speed with GCC4 visibility control. (Nuno)</description>
        <references/>
      </change>
      <change>
        <description>Improved engine stack implementation for better performance and stability. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Improved memory usage by moving constants to read only memory. (Dmitry, Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Changed exception handling. Now each op_array doesn't contain ZEND_HANDLE_EXCEPTION opcode in the end. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Optimized require_once() and include_once() by eliminating fopen(3) on second usage. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Optimized ZEND_FETCH_CLASS + ZEND_ADD_INTERFACE into single ZEND_ADD_INTERFACE opcode. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Optimized string searching for a single character. (Michal Dziemianko, Scott)</description>
        <references/>
      </change>
      <change>
        <description>Optimized interpolated strings to use one less opcode. (Matt)</description>
        <references/>
      </change>
    </module>
    <module id="Improved php.ini handling: (Jani)">
      <change>
        <description>Added ".htaccess" style user-defined php.ini files support for CGI/FastCGI.</description>
        <references/>
      </change>
      <change>
        <description>Added support for special [PATH=/opt/httpd/www.example.com/] and [HOST=www.example.com] sections. Directives set in these sections can not be overridden by user-defined ini-files or during runtime.</description>
        <references/>
      </change>
      <change>
        <description>Added better error reporting for php.ini syntax errors.</description>
        <references/>
      </change>
      <change>
        <description>Allowed using full path to load modules using "extension" directive.</description>
        <references/>
      </change>
      <change>
        <description>Allowed "ini-variables" to be used almost everywhere ini php.ini files.</description>
        <references/>
      </change>
      <change>
        <description>Allowed using alphanumeric/variable indexes in "array" ini options.</description>
        <references/>
      </change>
      <change>
        <description>Added 3rd optional parameter to parse_ini_file() to specify the scanning mode of INI_SCANNER_NORMAL or INI_SCANNER_RAW. In raw mode option values and section values are treated as-is.</description>
        <references/>
      </change>
      <change>
        <description>Fixed get_cfg_var() to be able to return "array" ini options.</description>
        <references/>
      </change>
      <change>
        <description>Added optional parameter to ini_get_all() to only retrieve the current value. (Hannes)</description>
        <references/>
      </change>
    </module>
    <module id="Improved Windows support">
      <change>
        <description>Update all libraries to their latest stable version. (Pierre, Rob, Liz, Garrett).</description>
        <references/>
      </change>
      <change>
        <description>Added Windows support for stat(), touch(), filemtime(), filesize() and related functions. (Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Re-added socket_create_pair() for Windows in sockets extension. (Kalle)</description>
        <references/>
      </change>
      <change>
        <description>Added inet_pton() and inet_ntop() also for Windows platforms. (Kalle, Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Added mcrypt_create_iv() for Windows platforms. (Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Added ACL Cache support on Windows. (Kanwaljeet Singla, Pierre, Venkat Raman Don)</description>
        <references/>
      </change>
      <change>
        <description>Added constants based on Windows' GetVersionEx information. PHP_WINDOWS_VERSION_* and PHP_WINDOWS_NT_*. (Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Added support for ACL (is_writable, is_readable, reports now correct results) on Windows. (Pierre, Venkat Raman Don, Kanwaljeet Singla)</description>
        <references/>
      </change>
      <change>
        <description>Added support for fnmatch() on Windows. (Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Added support for time_nanosleep() and time_sleep_until() on Windows. (Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Added support for symlink(), readlink(), linkinfo() and link() on Windows. They are available only when the running platform supports them. (Pierre)</description>
        <references/>
      </change>
      <change>
        <description>the GMP extension now relies on MPIR instead of the GMP library. (Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Added Windows support for stream_socket_pair(). (Kalle)</description>
        <references/>
      </change>
      <change>
        <description>Drop all external dependencies for the core features. (Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Drastically improve the build procedure (Pierre, Kalle, Rob):</description>
        <references/>
      </change>
      <change>
        <description>MSI installer now supports all recent Windows versions, including Windows 7. (John, Kanwaljeet Singla)</description>
        <references/>
      </change>
    </module>
    <module id="Improved and cleaned CGI code">
      <change>
        <description>FastCGI is now always enabled and cannot be disabled. See sapi/cgi/CHANGES for more details. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Added CGI SAPI -T option which can be used to measure execution time of script repeated several times. (Dmitry)</description>
        <references/>
      </change>
    </module>
    <module id="Improved streams">
      <change>
        <description>Fixed confusing error message on failure when no errors are logged. (Greg)</description>
        <references/>
      </change>
      <change>
        <description>Added stream_supports_lock() function. (Benjamin Schulz)</description>
        <references/>
      </change>
      <change>
        <description>Added context parameter for copy() function. (Sara)</description>
        <references/>
      </change>
      <change>
        <description>Added "glob://" stream wrapper. (Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added "params" as optional parameter for stream_context_create(). (Sara)</description>
        <references/>
      </change>
      <change>
        <description>Added ability to use stream wrappers in include_path. (Gregory, Dmitry)</description>
        <references/>
      </change>
    </module>
    <module id="Improved DNS API">
      <change>
        <description>Added Windows support for dns_check_record(), dns_get_mx(), checkdnsrr() and getmxrr(). (Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Added support for old style DNS functions (supports OSX and FBSD). (Scott)</description>
        <references/>
      </change>
      <change>
        <description>Added a new "entries" array in dns_check_record() containing the TXT elements. (Felipe, Pierre)</description>
        <references/>
      </change>
    </module>
    <module id="Improved hash extension">
      <change>
        <description>Changed mhash to be a wrapper layer around the hash extension. (Scott)</description>
        <references/>
      </change>
      <change>
        <description>Added hash_copy() function. (Tony)</description>
        <references/>
      </change>
      <change>
        <description>Added sha224 hash algorithm to the hash extension. (Scott)</description>
        <references/>
      </change>
    </module>
    <module id="Improved IMAP support (Pierre)">
      <change>
        <description>Added imap_gc() to clear the imap cache</description>
        <references/>
      </change>
      <change>
        <description>Added imap_utf8_to_mutf7() and imap_mutf7_to_utf8()</description>
        <references/>
      </change>
    </module>
    <module id="Improved mbstring extension">
      <change>
        <description>Added "mbstring.http_output_conv_mimetypes" INI directive that allows common non-text types such as "application/xhtml+xml" to be converted by mb_output_handler(). (Moriyoshi)</description>
        <references/>
      </change>
    </module>
    <module id="Improved OCI8 extension (Chris Jones/Oracle Corp.)">
      <change>
        <description>Added Database Resident Connection Pooling (DRCP) and Fast Application Notification (FAN) support.</description>
        <references/>
      </change>
      <change>
        <description>Added support for Oracle External Authentication (not supported on Windows).</description>
        <references/>
      </change>
      <change>
        <description>Improve persistent connection handling of restarted DBs.</description>
        <references/>
      </change>
      <change>
        <description>Added SQLT_AFC (aka CHAR datatype) support to oci_bind_by_name.</description>
        <references/>
      </change>
      <change>
        <description>(Numeric keys for associative arrays are not handled properly)</description>
        <references>
          <reference type="bugfix">45458</reference>
        </references>
      </change>
      <change>
        <description>(Segmentation fault with query over DB link).</description>
        <references>
          <reference type="bugfix">41069</reference>
        </references>
      </change>
      <change>
        <description>Fixed define of SQLT_BDOUBLE and SQLT_BFLOAT constants with Oracle 10g ORACLE_HOME builds.</description>
        <references/>
      </change>
      <change>
        <description>Changed default value of oci8.default_prefetch from 10 to 100.</description>
        <references/>
      </change>
      <change>
        <description>Fixed PECL bug [#16035](http://bugs.php.net/16035) (OCI8: oci_connect without ORACLE_HOME defined causes segfault) (Chris Jones/Oracle Corp.)</description>
        <references/>
      </change>
      <change>
        <description>Fixed PECL bug [#15988](http://bugs.php.net/15988) (OCI8: sqlnet.ora isn't read with older Oracle libraries) (Chris Jones/Oracle Corp.)</description>
        <references/>
      </change>
      <change>
        <description>Fixed PECL bug [#14268](http://bugs.php.net/14268) (Allow "pecl install oci8" command to "autodetect" an Instant Client RPM install) (Chris Jones/Oracle Corp.)</description>
        <references/>
      </change>
      <change>
        <description>Fixed PECL bug [#12431](http://bugs.php.net/12431) (OCI8 ping functionality is broken).</description>
        <references/>
      </change>
      <change>
        <description>Allow building (e.g from PECL) the PHP 5.3-based OCI8 code with PHP 4.3.9 onwards.</description>
        <references/>
      </change>
      <change>
        <description>Provide separate extensions for Oracle 11g and 10g on Windows. (Pierre, Chris)</description>
        <references/>
      </change>
    </module>
    <module id="Improved OpenSSL extension">
      <change>
        <description>Added support for OpenSSL digest and cipher functions. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Added access to internal values of DSA, RSA and DH keys. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Fixed a memory leak on openssl_decrypt(). (Henrique)</description>
        <references/>
      </change>
      <change>
        <description>Fixed segfault caused by openssl_pkey_new(). (Henrique)</description>
        <references/>
      </change>
      <change>
        <description>Fixed bug caused by uninitilized variables in openssl_pkcs7_encrypt() and openssl_pkcs7_sign(). (Henrique)</description>
        <references/>
      </change>
      <change>
        <description>Fixed error message in openssl_seal(). (Henrique)</description>
        <references/>
      </change>
    </module>
    <module id="Improved pcntl extension: (Arnaud)">
      <change>
        <description>Added pcntl_signal_dispatch().</description>
        <references/>
      </change>
      <change>
        <description>Added pcntl_sigprocmask().</description>
        <references/>
      </change>
      <change>
        <description>Added pcntl_sigwaitinfo().</description>
        <references/>
      </change>
      <change>
        <description>Added pcntl_sigtimedwait().</description>
        <references/>
      </change>
    </module>
    <module id="Improved SOAP extension">
      <change>
        <description>Added support for element names in context of XMLSchema's &lt;any&gt;. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Added ability to use Traversable objects instead of plain arrays. (Joshua Reese, Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Fixed possible crash bug caused by an uninitialized value. (Zdash Urf)</description>
        <references/>
      </change>
    </module>
    <module id="Improved SPL extension">
      <change>
        <description>Added SPL to list of standard extensions that cannot be disabled. (Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added ability to store associative information with objects in SplObjectStorage. (Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added ArrayAccess support to SplObjectStorage. (Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added SplDoublyLinkedList, SplStack, SplQueue classes. (Etienne)</description>
        <references/>
      </change>
      <change>
        <description>Added FilesystemIterator. (Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added GlobIterator. (Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added SplHeap, SplMinHeap, SplMaxHeap, SplPriorityQueue classes. (Etienne)</description>
        <references/>
      </change>
      <change>
        <description>Added new parameter $prepend to spl_autoload_register(). (Etienne)</description>
        <references/>
      </change>
      <change>
        <description>Added SplFixedArray. (Etienne, Tony)</description>
        <references/>
      </change>
      <change>
        <description>Added delaying exceptions in SPL's autoload mechanism. (Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added RecursiveTreeIterator. (Arnaud, Marcus)</description>
        <references/>
      </change>
      <change>
        <description>Added MultipleIterator. (Arnaud, Marcus, Johannes)</description>
        <references/>
      </change>
    </module>
    <module id="Improved Zend Engine">
      <change>
        <description>Added "compact" handler for Zend MM storage. (Dmitry)</description>
        <references/>
      </change>
      <change>
        <description>Added "+" and "*" specifiers to zend_parse_parameters(). (Andrei)</description>
        <references/>
      </change>
      <change>
        <description>Added concept of "delayed early binding" that allows opcode caches to perform class declaration (early and/or run-time binding) in exactly the same order as vanilla PHP. (Dmitry)</description>
        <references/>
      </change>
    </module>
    <module id="Improved crypt() function: (Pierre)">
      <change>
        <description>Added Blowfish and extended DES support. (Using Blowfish implementation from Solar Designer).</description>
        <references/>
      </change>
      <change>
        <description>Made crypt features portable by providing our own implementations for crypt_r and the algorithms which are used when OS does not provide them. PHP implementations are always used for Windows builds.</description>
        <references/>
      </change>
    </module>
    <module id="Added new extensions">
      <change>
        <description>Added Enchant extension as a way to access spell checkers. (Pierre)</description>
        <references/>
      </change>
      <change>
        <description>Added fileinfo extension as replacement for mime_magic extension. (Derick)</description>
        <references/>
      </change>
      <change>
        <description>Added intl extension for Internationalization. (Ed B., Vladimir I., Dmitry L., Stanislav M., Vadim S., Kirti V.)</description>
        <references/>
      </change>
      <change>
        <description>Added mysqlnd extension as replacement for libmysql for ext/mysql, mysqli and PDO_mysql. (Andrey, Johannes, Ulf)</description>
        <references/>
      </change>
      <change>
        <description>Added phar extension for handling PHP Archives. (Greg, Marcus, Steph)</description>
        <references/>
      </change>
      <change>
        <description>Added SQLite3 extension. (Scott)</description>
        <references/>
      </change>
    </module>
    <module id="Added new date/time functionality: (Derick)">
      <change>
        <description>date_parse_from_format(): Parse date/time strings according to a format.</description>
        <references/>
      </change>
      <change>
        <description>date_create_from_format()/DateTime::createFromFormat(): Create a date/time object by parsing a date/time string according to a given format.</description>
        <references/>
      </change>
      <change>
        <description>date_get_last_errors()/DateTime::getLastErrors(): Return a list of warnings and errors that were found while parsing a date/time string through:</description>
        <references/>
      </change>
      <change>
        <description>support for abbreviation and offset based timezone specifiers for the 'e' format specifier, DateTime::__construct(), DateTime::getTimeZone() and DateTimeZone::getName().</description>
        <references/>
      </change>
      <change>
        <description>support for selectively listing timezone identifiers by continent or country code through timezone_identifiers_list() / DateTimezone::listIdentifiers().</description>
        <references/>
      </change>
      <change>
        <description>timezone_location_get() / DateTimezone::getLocation() for retrieving location information from timezones.</description>
        <references/>
      </change>
      <change>
        <description>date_timestamp_set() / DateTime::setTimestamp() to set a Unix timestamp without invoking the date parser. (Scott, Derick)</description>
        <references/>
      </change>
      <change>
        <description>date_timestamp_get() / DateTime::getTimestamp() to retrieve the Unix timestamp belonging to a date object.</description>
        <references/>
      </change>
      <change>
        <description>two optional parameters to timezone_transitions_get() / DateTimeZone::getTranstions() to limit the range of transitions being returned.</description>
        <references/>
      </change>
      <change>
        <description>support for "first/last day of &lt;month&gt;" style texts.</description>
        <references/>
      </change>
      <change>
        <description>support for date/time strings returned by MS SQL.</description>
        <references/>
      </change>
      <change>
        <description>support for serialization and unserialization of DateTime objects.</description>
        <references/>
      </change>
      <change>
        <description>support for diffing date/times through date_diff() / DateTime::diff().</description>
        <references/>
      </change>
      <change>
        <description>support for adding/subtracting weekdays with strtotime() and DateTime::modify().</description>
        <references/>
      </change>
      <change>
        <description>DateInterval class to represent the difference between two date/times.</description>
        <references/>
      </change>
      <change>
        <description>support for parsing ISO intervals for use with DateInterval.</description>
        <references/>
      </change>
      <change>
        <description>date_add() / DateTime::add(), date_sub() / DateTime::sub() for applying an interval to an existing date/time.</description>
        <references/>
      </change>
      <change>
        <description>proper support for "this week", "previous week"/"last week" and "next week" phrases so that they actually mean the week and not a seven day period around the current day.</description>
        <references/>
      </change>
      <change>
        <description>support for "&lt;xth&gt; &lt;weekday&gt; of" and "last &lt;weekday&gt; of" phrases to be used with months - like in "last saturday of februari 2008".</description>
        <references/>
      </change>
      <change>
        <description>support for "back of &lt;hour&gt;" and "front of &lt;hour&gt;" phrases that are used in Scotland.</description>
        <references/>
      </change>
      <change>
        <description>DatePeriod class which supports iterating over a DateTime object applying DateInterval on each iteration, up to an end date or limited by maximum number of occurences.</description>
        <references/>
      </change>
    </module>
  </changes>
</release>
